#ifndef _Imakefile_Config_
#define _Imakefile_Config_

/**/#
/**/# Imakefile.Config by Kurt Lidl (lidl@pix.com)
/**/#
/**/# This file (Imakefile.Config) is included in all the other Imakefiles
/**/# in the PIX X-Tank distribution.  Unless you are porting X-Tank to
/**/# a new (unsupported) platform, or adding new features to the game,
/**/# this should be the only file you need to edit to install the game.
/**/#
/**/# If you have any problems *AT ALL* with the Imakefiles themselves,
/**/# please be sure to tell the folks who read the USENET newsgroup
/**/# rec.games.xtank.programmer.  If you can't get or send news, then
/**/# you can mail your problems to xtank@eng.umd.edu -- make sure
/**/# that you include the information requested in the README file.
/**/# Also, make sure that say you can't get news, so people will know to
/**/# respond via E-Mail.
/**/#
/**/# Thanks.  We'd also love to hear of new robots and tank designs.

#ifdef unix
#undef unix
#endif

/**/# The above is needed to defeat the people who have systems
/**/# that will define unix to be one, which later turns unix.c into 1.c

/**/#
/**/# For a complete list of things that can be tweaked for a given
/**/# Xtank installation, read the file "Imakefile.README".  That will
/**/# describe all the compile time flags that you can manipulate.
/**/#

/**/# Everybody needs to know the following global things about xtank

DEFINES2        = -DX11 -DUNIX -DS1024x864 -DKEYPAD_DETECT -DSTINGY_REDRAW \
		-DBATCH_LINES -DBATCH_POINTS -DBATCH_COLOR_LINES \
		-DCODE_SIZE=0x20000 -DSTACK_SIZE=0x8000 \
		-DNEW_LIMITS -DTAC_NUKES -DMORTORS -DSLOWER \
		$(ARCH_DEFINES) $(SUPP_DEFINES)

DEFINES         = -DXTANK_DIR=\"/home/lidl/xtank/src\" $(DEFINES2) \
		-DALLDEFINES="\"$(DEFINES2)\""

/**/# Start of Suppliment support packages configuration
/**/# (e.g. special things that are architecture independent, but require
/**/# external library support that Xtank alone does not provide)

/**/# This is a gross kludge, and will be moved around.  I'm not sure
/**/# exactly what I want to do with this yet.  (lidl -- 02-August-93)

SUPP_DEFINES    = $(SOUND_DEFINES)

/* #define HAVE_SOUND */

#ifdef HAVE_SOUND
  SOUND_DEFINES = -DSOUND
  SOUND_LIBRARY = -L../../rplay-3.1.1/librplay -lrplay
 SOUND_INCLUDES = -I../../rplay-3.1.1/include
#endif

/**/# XXX
/**/# If you turn on the following define, you will force "gcc" to be
/**/# used on your system, regardless of how your X Window System
/**/# configuration is setup.  This is primarily included as a crutch
/**/# for people with fascist system administrators, who don't like gcc.
/**/# If you do this, make sure that you architecture flags are setup
/**/# further down in the file...

#define FORCE_GCC

           FLEX = flex

/**/# Start of System Dependent Things
/**/# (e.g. special options for your particular hardware and installation)

/**/# No user-servicable parts beneath this line

#ifdef __386BSD__
   XTANK_TARGET = xtank.386bsd
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP
    CDEBUGFLAGS = -g -O
#endif

#ifdef i860Architecture
   XTANK_TARGET = xtank.intel860
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_SVR4
    CDEBUGFLAGS = -gg
#endif

#ifdef AlphaArchitecture
   XTANK_TARGET = xtank.alpha
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP -DDYNALOAD # -DTHREAD_POSIX
    CDEBUGFLAGS = -O -Olimit 900 -w -std -oldcomment
#endif

#ifdef ApolloArchitecture
   XTANK_TARGET = xtank.apollo
   ARCH_DEFINES = -DMULTI_SYNC -DDYNALOAD
    CDEBUGFLAGS = -g
#endif

#ifdef BobcatArchitecture
   XTANK_TARGET = xtank.bobcat
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP
    CDEBUGFLAGS = -O
#endif

#if defined(i386BsdArchitecture) || defined(__bsdi__)
   XTANK_TARGET = xtank.bsdi
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP
           FLEX = lex
# if defined(HasGcc2) || defined(FORCE_GCC)
    CDEBUGFLAGS = -g -O2
    CDEBUGFLAGS = -g -O
#  if defined(FORCE_GCC)
             CC = gcc2
#  endif
# else
    CDEBUGFLAGS = -g -O
# endif
#endif

#ifdef HPArchitecture
# ifdef hp9000s800
   XTANK_TARGET = xtank.hp9k8
# else
   XTANK_TARGET = xtank.hp9k3
# endif
   ARCH_DEFINES = -DMULTI_SYNC -DDYNALOAD -DTHREAD_MP
    CDEBUGFLAGS = -g
#endif

#ifdef LinuxArchitecture
   XTANK_TARGET = xtank.linux
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP -Dconst=""
    CDEBUGFLAGS = -O3
             CC = gcc -traditional -pipe
#endif

#ifdef MultimaxArchitecture
   XTANK_TARGET = xtank.mmax
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP -Dmmax
    CDEBUGFLAGS = -g
#endif

#ifdef NeXTArchitecture
   XTANK_TARGET = xtank.next
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP
    CDEBUGFLAGS = -g
#endif

#if defined(RiscArchitecture) || defined(RsArchitecture)
/**/# IBM RS6000
   XTANK_TARGET = xtank.rs6k
   ARCH_DEFINES = -DMULTI_SYNC -DDYNALOAD -DTHREAD_MP -D_BSD -DBSD_INCLUDES
    CDEBUGFLAGS = -g
#endif

#ifdef RtArchitecture
   XTANK_TARGET = xtank.rt
   ARCH_DEFINES = -DMULTI_SYNC -DDYNALOAD
    CDEBUGFLAGS = -g
#endif

#ifdef SequentArchitecture
   XTANK_TARGET = xtank.seq
   ARCH_DEFINES = -DMULTI_SYNC -DDYNALOAD -DTHREAD_MP
    CDEBUGFLAGS = -g
#endif

#ifdef SGIArchitecture
   XTANK_TARGET = xtank.sgi
   ARCH_DEFINES = -D_BSD_SIGNALS -DMULTI_SYNC -DTHREAD_MP
    CDEBUGFLAGS = -g
#endif

#ifdef SunArchitecture
# ifdef SparcArchitecture
   XTANK_TARGET = xtank.sun4
   ARCH_DEFINES = -DSUNOS4_0 -DTHREAD_SUNLWP -DDYNALOAD -DHAS_SINCOS \
                  -DMULTI_SYNC
# else
   XTANK_TARGET = xtank.sun3
   ARCH_DEFINES = -DSUNOS4_0 -DTHREAD_SUNLWP -DDYNALOAD -DHAS_SINCOS \
                  -DMULTI_SYNC
# endif
# if defined(HasGcc2) || defined(FORCE_GCC)
    CDEBUGFLAGS = -g -O2 -fstrength-reduce -finline-functions
#  if defined(FORCE_GCC)
             CC = gcc
#  endif
# else
    CDEBUGFLAGS = -O4 /usr/lib/libm.il
# endif
#endif

#ifdef UltrixArchitecture
#ifdef MipsArchitecture
   XTANK_TARGET = xtank.mips-el
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP -DDYNALOAD
# if defined(HasGcc) || defined(FORCE_GCC)
#  ifdef FORCE_GCC
             CC = gcc
#  endif
    CDEBUGFLAGS = -g -O
# else
    CDEBUGFLAGS = -O -Olimit 1024
# endif
#endif
#endif

#ifdef VaxArchitecture
   XTANK_TARGET = xtank.vax
   ARCH_DEFINES = -DMULTI_SYNC -DTHREAD_MP -DDYNALOAD
    CDEBUGFLAGS = -g
#endif

/**/# End of System Dependent Things

/*
 * SpecialObjectRule - generate rules to compile a file with special flags.
 */
#ifndef ExtraSpecialObjectRule
#define ExtraSpecialObjectRule(objs,depends,options)			@@\
objs:   depends								@@\
	$(RM) $@							@@\
	$(CC) $(ALLDEFINES) -c options $*.c
#endif /* ExtraSpecialObjectRule */

/*
 * NamedMakeSubdirs - generate rules to do makes in the given subdirectories.
 * If you want CDEBUGFLAGS passed along to subdirectories, provide a line like
 * the following in the appropriate Imakefile
 *
 *         #define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'
 */
#ifndef MyNamedMakeSubdirs
#define MyNamedMakeSubdirs(name,dirs) \
NamedTargetSubdirs(name,dirs,"making" name,PassCDebugFlags PassDefines,all)
#endif /* MyNamedMakeSubdirs */

#endif /* _Imakefile_Config_ */
